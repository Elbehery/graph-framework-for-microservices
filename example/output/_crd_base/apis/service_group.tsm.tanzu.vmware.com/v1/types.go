// Code generated by nexus. DO NOT EDIT.

package v1

import (
	corev1tsmtanzuvmwarecomv1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +k8s:openapi-gen=true
type Child struct {
	Group string `json:"group" yaml:"group"`
	Kind  string `json:"kind" yaml:"kind"`
	Name  string `json:"name" yaml:"name"`
}

// +k8s:openapi-gen=true
type Link struct {
	Group string `json:"group" yaml:"group"`
	Kind  string `json:"kind" yaml:"kind"`
	Name  string `json:"name" yaml:"name"`
}

/* ------------------- CRDs definitions ------------------- */

// +genclient
// +genclient:noStatus
// +genclient:nonNamespaced
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
type SvcGroup struct {
	metav1.TypeMeta   `json:",inline" yaml:",inline"`
	metav1.ObjectMeta `json:"metadata" yaml:"metadata"`
	Spec              SvcGroupSpec `json:"spec,omitempty" yaml:"spec,omitempty"`
}

func (c *SvcGroup) CRDName() string {
	return "svcgroups.service_group.tsm.tanzu.vmware.com"
}

// +k8s:openapi-gen=true
type SvcGroupSpec struct {
	DisplayName string                                       `json:"displayName" yaml:"displayName"`
	Description string                                       `json:"description" yaml:"description"`
	Color       string                                       `json:"color" yaml:"color"`
	Services    map[string]corev1tsmtanzuvmwarecomv1.Service `json:"-" yaml:"-"`
	ServicesGvk map[string]Link                              `json:"servicesGvk,omitempty" yaml:"servicesGvk,omitempty" nexus:"link"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
type SvcGroupList struct {
	metav1.TypeMeta `json:",inline" yaml:",inline"`
	metav1.ListMeta `json:"metadata" yaml:"metadata"`
	Items           []SvcGroup `json:"items" yaml:"items"`
}
